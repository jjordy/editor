import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useFieldArray, useForm } from "../../utils";
export default function RulesForm({ onDataChange, data, }) {
    const { register } = useForm({ onDataChange, data });
    const { fields, add, remove } = useFieldArray({ name: "rules", data });
    return (_jsxs(_Fragment, { children: [_jsx("div", { className: "my-2 text-sm font-bold text-slate-600", children: "Show this item" }), fields.map((field) => (_jsxs("div", { className: "flex items-center w-full mb-2", children: [_jsxs("div", { className: "w-full max-w-[25px] text-sm font-bold text-slate-400", children: [field + 1, " )", " "] }), _jsxs("div", { className: "space-x-4 ml-4", children: [_jsx("label", { htmlFor: "id_left_hand_expression", className: "question-label font-bold text-slate-500", children: "If" }), _jsx("input", { className: "rules-form--input max-w-[200px]", ...register(`rules[${field}].left_hand_expression`) })] }), _jsxs("div", { className: "ml-4 space-x-4", children: [_jsx("label", { htmlFor: "id_type", className: "question-label font-bold text-slate-500", children: "Is" }), _jsxs("select", { className: "rules-form--input", ...register(`rules[${field}].operator`), children: [_jsx("option", { value: "IS_EQUAL", children: "Equal to" }), _jsx("option", { value: "CONTAINS", children: "Contains" }), _jsx("option", { value: "GREATER_THAN", children: "Greater than" }), _jsx("option", { value: "LESS_THAN", children: "Less than" })] })] }), _jsxs("div", { className: "ml-4 space-x-4", children: [_jsx("label", { htmlFor: `id_rules[${field}].right_hand_expression`, className: "question-label" }), _jsx("input", { className: "rules-form--input max-w-[200px]", ...register(`rules[${field}].right_hand_expression`) })] }), _jsxs("div", { className: "space-x-4 ml-4", children: [_jsx("label", { htmlFor: "id_type", className: "question-label font-bold text-slate-500 w-full max-w-[250px]", children: "Evaluate as" }), _jsxs("select", { ...register(`rules[${field}].expression_type`), className: "rules-form--input", children: [_jsx("option", { value: "string", children: "Text" }), _jsx("option", { value: "integer", children: "Number" }), _jsx("option", { value: "boolean", children: "Boolean" })] })] }), _jsx("div", { className: "mr-auto" }), _jsx("button", { type: "button", onClick: () => remove(field), className: "w-6 h-6 flex items-center justify-center bg-red-200 text-red-900 rounded", children: _jsx("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 16 16", fill: "currentColor", className: "w-4 h-4", children: _jsx("path", { d: "M5.28 4.22a.75.75 0 0 0-1.06 1.06L6.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L8 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L9.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L8 6.94 5.28 4.22Z" }) }) })] }))), _jsx("button", { type: "button", onClick: add, className: "rules-form--add-row", children: "Add Rule" })] }));
}
